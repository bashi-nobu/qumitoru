version: '3'

services:
  db:
    image:
      mysql:5.7
    container_name:
      qumitoru-mysql
    environment:
      MYSQL_DATABASE: test
      MYSQL_ROOT_USER: test
      MYSQL_ROOT_PASSWORD: test
    ports:
      - 3306:3306
  backend:
    container_name:
      qumitoru-django
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    volumes:
      - ./django/qumitoru:/api
    ports:
      - "8001:8001"
    tty: true
    depends_on:
      - db
  frontend:
    container_name:
      qumitoru-vue
    build:
      context: .
      dockerfile: ./docker/vue/Dockerfile
    tty: true
    volumes:
      - ./vue/app:/app:cached
    ports:
      - "8080:8080"
  jsonserver:
    build:
      context: .
      dockerfile: ./docker/jsonserver/Dockerfile
    volumes:
      - ./docker/jsonserver/server:/data/server:delegated
    tty: true
    working_dir: /data/server
    command: sh -c "yarn install && yarn start"
    container_name: jsonserver
    ports:
      - "33000:33000"
  lambda-scanner:
    container_name:
      qumitoru-lambda-scanner
    build:
      context: .
      dockerfile: ./docker/lambda/scanner/Dockerfile
    ports:
      - "9000:8080"
  lambda-ocr-cutout:
    container_name:
      qumitoru-lambda-ocr-cutout
    build:
      context: .
      dockerfile: ./docker/lambda/ocr/cutout/Dockerfile
    ports:
      - "9010:8080"
  lambda-ocr-predict1:
    container_name:
      qumitoru-lambda-ocr-predict1
    build:
      context: .
      dockerfile: ./docker/lambda/ocr/predict/Dockerfile
    ports:
      - "9020:8080"
  lambda-ocr-predict2:
    container_name:
      qumitoru-lambda-ocr-predict2
    build:
      context: .
      dockerfile: ./docker/lambda/ocr/predict/Dockerfile
    ports:
      - "9030:8080"
volumes:
  mysqldata:
